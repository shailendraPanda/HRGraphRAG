[PrefixDeclaration]
: http://example.com/hr#
foaf: http://xmlns.com/foaf/0.1/
xsd: http://www.w3.org/2001/XMLSchema#
rdf: http://www.w3.org/1999/02/22-rdf-syntax-ns#
rdfs: http://www.w3.org/2000/01/rdf-schema#
owl: http://www.w3.org/2002/07/owl#
dbo: http://dbpedia.org/ontology/
dcterms: http://purl.org/dc/terms/
geo: http://www.w3.org/2003/01/geo/wgs84_pos#

[MappingDeclaration] @collection [[

mappingId hr_document
target :doc_{doc_id} a :HRDocument ;
       :hasDocumentId {doc_id} ;
       :hasDocumentName {doc_name} ;
       :hasDocumentType {doc_type} ;
       :hasMappingsData {mappings_data} .
source SELECT Doc_id as doc_id, Doc_name as doc_name, docType as doc_type, mappingsdata as mappings_data FROM hr_data

mappingId resume_document
target :resume_{doc_id} a :Resume ;
       rdfs:subClassOf :HRDocument ;
       :hasDocumentId {doc_id} ;
       :hasDocumentName {doc_name} ;
       :hasDocumentType {doc_type} ;
       :hasMappingsData {mappings_data} .
source SELECT Doc_id as doc_id, Doc_name as doc_name, docType as doc_type, mappingsdata as mappings_data 
       FROM hr_data 
       WHERE docType = 'Resume'

mappingId job_description_document
target :jobdesc_{doc_id} a :JobDescription ;
       rdfs:subClassOf :HRDocument ;
       :hasDocumentId {doc_id} ;
       :hasDocumentName {doc_name} ;
       :hasDocumentType {doc_type} ;
       :hasMappingsData {mappings_data} .
source SELECT Doc_id as doc_id, Doc_name as doc_name, docType as doc_type, mappingsdata as mappings_data 
       FROM hr_data 
       WHERE docType = 'JobDescription'

mappingId resume_data_extraction
target :resume_{doc_id} :hasResumeId {resume_id} ;
       :hasCandidateId {candidate_id} ;
       :hasCandidateName {candidate_name} ;
       :hasContact {contact} ;
       :hasEmail {email} ;
       :hasLocation {location} ;
       :hasExpectedSalary {expected_salary} .
source SELECT Doc_id as doc_id,
       json_extract_scalar(mappingsdata, '$.ResumeId') as resume_id,
       json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
       json_extract_scalar(mappingsdata, '$.CandidateName') as candidate_name,
       json_extract_scalar(mappingsdata, '$.Contact') as contact,
       json_extract_scalar(mappingsdata, '$.Email') as email,
       json_extract_scalar(mappingsdata, '$.Location') as location,
       json_extract_scalar(mappingsdata, '$.ExpectedSalary') as expected_salary
       FROM hr_data 
       WHERE docType = 'Resume' 
       AND json_extract_scalar(mappingsdata, '$.ResumeId') IS NOT NULL

mappingId candidate_person
target :candidate_{candidate_id} a :Person ;
       a foaf:Person ;
       foaf:name {candidate_name} ;
       :hasPhoneNumber {contact} ;
       foaf:mbox {email} ;
       :livesIn {location} ;
       :expectsSalary {expected_salary} .
source SELECT Doc_id, 
       json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
       json_extract_scalar(mappingsdata, '$.CandidateName') as candidate_name,
       json_extract_scalar(mappingsdata, '$.Contact') as contact,
       json_extract_scalar(mappingsdata, '$.Email') as email,
       json_extract_scalar(mappingsdata, '$.Location') as location,
       json_extract_scalar(mappingsdata, '$.ExpectedSalary') as expected_salary
       FROM hr_data 
       WHERE docType = 'Resume' 
       AND json_extract_scalar(mappingsdata, '$.CandidateId') IS NOT NULL

mappingId candidate_skills_array
target :candidate_{candidate_id} :hasSkill :skill_{skill_hash} .
source SELECT Doc_id, 
              json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
              skill_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_', skill_value)) as skill_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(mappingsdata, '$.Skills')) as array(varchar))) AS t(skill_value)
       WHERE docType = 'Resume' 
       AND json_extract_scalar(mappingsdata, '$.Skills') IS NOT NULL

mappingId skill_entity
target :skill_{skill_hash} a :Skill ;
       rdfs:label {skill_value} ;
       :skillName {skill_value} .
source SELECT json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
              skill_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_', skill_value)) as skill_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(mappingsdata, '$.Skills')) as array(varchar))) AS t(skill_value)
       WHERE docType = 'Resume' 
       AND json_extract_scalar(mappingsdata, '$.Skills') IS NOT NULL

mappingId candidate_experience
target :candidate_{candidate_id} :hasWorkExperience :experience_{experience_hash} .
source SELECT Doc_id,
       json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
       md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_exp')) as experience_hash
       FROM hr_data 
       WHERE docType = 'Resume' 
       AND json_extract_scalar(mappingsdata, '$.Experience') IS NOT NULL

mappingId experience_entity
target :experience_{experience_hash} a :WorkExperience ;
       :hasExperienceData {experience_data} .
source SELECT Doc_id,
       md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_exp')) as experience_hash,
       json_extract_scalar(mappingsdata, '$.Experience') as experience_data
       FROM hr_data 
       WHERE docType = 'Resume' 
       AND json_extract_scalar(mappingsdata, '$.Experience') IS NOT NULL

mappingId candidate_certifications_array
target :candidate_{candidate_id} :hasCertification :cert_{cert_hash} .
source SELECT Doc_id, 
              json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
              cert_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_', cert_value)) as cert_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(mappingsdata, '$.Certifications')) as array(varchar))) AS t(cert_value)
       WHERE docType = 'Resume' 
       AND json_extract_scalar(mappingsdata, '$.Certifications') IS NOT NULL

mappingId certification_entity
target :cert_{cert_hash} a :Certification ;
       rdfs:label {cert_value} ;
       :certificationName {cert_value} .
source SELECT json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
              cert_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_', cert_value)) as cert_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(mappingsdata, '$.Certifications')) as array(varchar))) AS t(cert_value)
       WHERE docType = 'Resume' 
       AND json_extract_scalar(mappingsdata, '$.Certifications') IS NOT NULL

mappingId job_description_data_extraction
target :jobdesc_{doc_id} :hasJobId {job_id} ;
       :hasJobPost {job_post} ;
       :hasCompanyName {company_name} ;
       :hasJobLocation {location} ;
       :hasSalaryRangeMin {salary_min} ;
       :hasSalaryRangeMax {salary_max} ;
       :hasExperienceRangeMin {exp_min} ;
       :hasExperienceRangeMax {exp_max} .
source SELECT Doc_id as doc_id,
       json_extract_scalar(mappingsdata, '$.JobId') as job_id,
       json_extract_scalar(mappingsdata, '$.JobPost') as job_post,
       json_extract_scalar(mappingsdata, '$.CompanyName') as company_name,
       json_extract_scalar(mappingsdata, '$.Location') as location,
       json_extract_scalar(mappingsdata, '$.SalaryRange.min') as salary_min,
       json_extract_scalar(mappingsdata, '$.SalaryRange.max') as salary_max,
       json_extract_scalar(mappingsdata, '$.YearsOfExperienceRange.min') as exp_min,
       json_extract_scalar(mappingsdata, '$.YearsOfExperienceRange.max') as exp_max
       FROM hr_data 
       WHERE docType = 'JobDescription' 
       AND json_extract_scalar(mappingsdata, '$.JobId') IS NOT NULL

mappingId job_entity
target :job_{job_id} a :Job ;
       :hasJobTitle {job_post} ;
       :atCompany :company_{company_hash} ;
       :locatedAt {location} ;
       :offersMinSalary {salary_min} ;
       :offersMaxSalary {salary_max} ;
       :requiresMinExperience {exp_min} ;
       :requiresMaxExperience {exp_max} .
source SELECT Doc_id,
       json_extract_scalar(mappingsdata, '$.JobId') as job_id,
       json_extract_scalar(mappingsdata, '$.JobPost') as job_post,
       md5(json_extract_scalar(mappingsdata, '$.CompanyName')) as company_hash,
       json_extract_scalar(mappingsdata, '$.Location') as location,
       json_extract_scalar(mappingsdata, '$.SalaryRange.min') as salary_min,
       json_extract_scalar(mappingsdata, '$.SalaryRange.max') as salary_max,
       json_extract_scalar(mappingsdata, '$.YearsOfExperienceRange.min') as exp_min,
       json_extract_scalar(mappingsdata, '$.YearsOfExperienceRange.max') as exp_max
       FROM hr_data 
       WHERE docType = 'JobDescription' 
       AND json_extract_scalar(mappingsdata, '$.JobId') IS NOT NULL

mappingId company_entity
target :company_{company_hash} a :Company ;
       :hasCompanyName {company_name} ;
       rdfs:label {company_name} .
source SELECT DISTINCT 
       md5(json_extract_scalar(mappingsdata, '$.CompanyName')) as company_hash,
       json_extract_scalar(mappingsdata, '$.CompanyName') as company_name
       FROM hr_data 
       WHERE docType = 'JobDescription' 
       AND json_extract_scalar(mappingsdata, '$.CompanyName') IS NOT NULL

mappingId job_required_skills_array
target :job_{job_id} :requiresSkill :skill_{skill_hash} .
source SELECT Doc_id, 
              json_extract_scalar(mappingsdata, '$.JobId') as job_id,
              skill_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.JobId'), '_', skill_value)) as skill_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(mappingsdata, '$.Skills')) as array(varchar))) AS t(skill_value)
       WHERE docType = 'JobDescription' 
       AND json_extract_scalar(mappingsdata, '$.Skills') IS NOT NULL

mappingId job_skill_entity
target :skill_{skill_hash} a :Skill ;
       rdfs:label {skill_value} ;
       :skillName {skill_value} .
source SELECT json_extract_scalar(mappingsdata, '$.JobId') as job_id,
              skill_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.JobId'), '_', skill_value)) as skill_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(mappingsdata, '$.Skills')) as array(varchar))) AS t(skill_value)
       WHERE docType = 'JobDescription' 
       AND json_extract_scalar(mappingsdata, '$.Skills') IS NOT NULL

mappingId job_required_roles_array
target :job_{job_id} :requiresRole :role_{role_hash} .
source SELECT Doc_id, 
              json_extract_scalar(mappingsdata, '$.JobId') as job_id,
              role_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.JobId'), '_', role_value)) as role_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(mappingsdata, '$.Roles')) as array(varchar))) AS t(role_value)
       WHERE docType = 'JobDescription' 
       AND json_extract_scalar(mappingsdata, '$.Roles') IS NOT NULL

mappingId role_entity_from_job
target :role_{role_hash} a :Role ;
       rdfs:label {role_value} ;
       :roleName {role_value} .
source SELECT json_extract_scalar(mappingsdata, '$.JobId') as job_id,
              role_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.JobId'), '_', role_value)) as role_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(mappingsdata, '$.Roles')) as array(varchar))) AS t(role_value)
       WHERE docType = 'JobDescription' 
       AND json_extract_scalar(mappingsdata, '$.Roles') IS NOT NULL

mappingId candidate_experience_roles_array
target :experience_{experience_hash} :hasRole :role_{role_hash} .
source SELECT Doc_id, 
              json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
              md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_exp')) as experience_hash,
              role_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_', role_value)) as role_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(json_extract_scalar(mappingsdata, '$.Experience'), '$.Roles')) as array(varchar))) AS t(role_value)
       WHERE docType = 'Resume' 
       AND json_extract_scalar(json_extract_scalar(mappingsdata, '$.Experience'), '$.Roles') IS NOT NULL

mappingId candidate_experience_skills_array
target :experience_{experience_hash} :usedSkill :skill_{skill_hash} .
source SELECT Doc_id, 
              json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
              md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_exp')) as experience_hash,
              skill_value,
              md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_exp_', skill_value)) as skill_hash
       FROM hr_data 
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(json_extract_scalar(mappingsdata, '$.Experience'), '$.Skills')) as array(varchar))) AS t(skill_value)
       WHERE docType = 'Resume' 
       AND json_extract_scalar(json_extract_scalar(mappingsdata, '$.Experience'), '$.Skills') IS NOT NULL

mappingId candidate_experience_years
target :experience_{experience_hash} :hasYearsOfExperience {years_of_experience} .
source SELECT Doc_id,
       md5(concat(json_extract_scalar(mappingsdata, '$.CandidateId'), '_exp')) as experience_hash,
       json_extract_scalar(json_extract_scalar(mappingsdata, '$.Experience'), '$.YearsOfExperience') as years_of_experience
       FROM hr_data 
       WHERE docType = 'Resume' 
       AND json_extract_scalar(json_extract_scalar(mappingsdata, '$.Experience'), '$.YearsOfExperience') IS NOT NULL

mappingId location_entity
target :location_{location_hash} a :Location ;
                      rdfs:label {location_name} ;
                      :locationName {location_name} .
source SELECT DISTINCT 
                                                 CASE 
                                                        WHEN docType = 'Resume' THEN json_extract_scalar(mappingsdata, '$.Location')
                                                        WHEN docType = 'JobDescription' THEN json_extract_scalar(mappingsdata, '$.Location')
                                                 END as location_name,
                                                 md5(CASE 
                                                        WHEN docType = 'Resume' THEN json_extract_scalar(mappingsdata, '$.Location')
                                                        WHEN docType = 'JobDescription' THEN json_extract_scalar(mappingsdata, '$.Location')
                                                 END) as location_hash
                      FROM hr_data 
                      WHERE (
                             (docType = 'Resume' AND json_extract_scalar(mappingsdata, '$.Location') IS NOT NULL) 
                             OR 
                             (docType = 'JobDescription' AND json_extract_scalar(mappingsdata, '$.Location') IS NOT NULL)
                      )

mappingId candidate_location_relationship
target :candidate_{candidate_id} :locatedAt :location_{location_hash} .
source SELECT Doc_id,
       json_extract_scalar(mappingsdata, '$.CandidateId') as candidate_id,
       md5(json_extract_scalar(mappingsdata, '$.Location')) as location_hash
       FROM hr_data 
       WHERE docType = 'Resume' 
       AND json_extract_scalar(mappingsdata, '$.Location') IS NOT NULL

mappingId job_location_relationship
target :job_{job_id} :locatedAt :location_{location_hash} .
source SELECT Doc_id,
       json_extract_scalar(mappingsdata, '$.JobId') as job_id,
       md5(json_extract_scalar(mappingsdata, '$.Location')) as location_hash
       FROM hr_data 
       WHERE docType = 'JobDescription' 
       AND json_extract_scalar(mappingsdata, '$.Location') IS NOT NULL

mappingId candidate_job_skill_match
target :candidate_{candidate_id} :hasMatchingSkillWith :job_{job_id} ;
       :skillMatchScore "1"^^xsd:int .
source SELECT DISTINCT 
              json_extract_scalar(c.mappingsdata, '$.CandidateId') as candidate_id,
              json_extract_scalar(j.mappingsdata, '$.JobId') as job_id
       FROM hr_data c
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(c.mappingsdata, '$.Skills')) as array(varchar))) AS c_skills(skill_value)
       CROSS JOIN hr_data j
       CROSS JOIN UNNEST(cast(json_parse(json_extract_scalar(j.mappingsdata, '$.Skills')) as array(varchar))) AS j_skills(skill_value)
       WHERE c.docType = 'Resume' 
       AND j.docType = 'JobDescription'
       AND c_skills.skill_value = j_skills.skill_value
       AND json_extract_scalar(c.mappingsdata, '$.CandidateId') IS NOT NULL
       AND json_extract_scalar(j.mappingsdata, '$.JobId') IS NOT NULL

mappingId candidate_job_location_match
target :candidate_{candidate_id} :hasLocationMatchWith :job_{job_id} ;
       :locationMatchScore "1"^^xsd:int .
source SELECT DISTINCT 
              json_extract_scalar(c.mappingsdata, '$.CandidateId') as candidate_id,
              json_extract_scalar(j.mappingsdata, '$.JobId') as job_id
       FROM hr_data c, hr_data j
       WHERE c.docType = 'Resume' 
       AND j.docType = 'JobDescription'
       AND json_extract_scalar(c.mappingsdata, '$.Location') = json_extract_scalar(j.mappingsdata, '$.Location')
       AND json_extract_scalar(c.mappingsdata, '$.CandidateId') IS NOT NULL
       AND json_extract_scalar(j.mappingsdata, '$.JobId') IS NOT NULL

mappingId candidate_job_salary_match
target :candidate_{candidate_id} :hasSalaryMatchWith :job_{job_id} ;
       :salaryCompatible "true"^^xsd:boolean .
source SELECT DISTINCT 
              json_extract_scalar(c.mappingsdata, '$.CandidateId') as candidate_id,
              json_extract_scalar(j.mappingsdata, '$.JobId') as job_id
       FROM hr_data c, hr_data j
       WHERE c.docType = 'Resume' 
       AND j.docType = 'JobDescription'
       AND CAST(json_extract_scalar(c.mappingsdata, '$.ExpectedSalary') AS INTEGER) >= CAST(json_extract_scalar(j.mappingsdata, '$.SalaryRange.min') AS INTEGER)
       AND CAST(json_extract_scalar(c.mappingsdata, '$.ExpectedSalary') AS INTEGER) <= CAST(json_extract_scalar(j.mappingsdata, '$.SalaryRange.max') AS INTEGER)
       AND json_extract_scalar(c.mappingsdata, '$.CandidateId') IS NOT NULL
       AND json_extract_scalar(j.mappingsdata, '$.JobId') IS NOT NULL

]]